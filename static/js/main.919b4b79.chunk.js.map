{"version":3,"sources":["Components/Warehouse.js","Components/Warehouses.js","Components/WarehouseView.js","Components/Filter.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Warehouse","warehouse","className","to","pathname","id","state","name","city","space_available","type","cluster","Warehouses","warehouses","length","map","style","padding","color","CustomFieldContainer","setWarehouse","setAddField","useState","customField","setCustomField","onChange","e","key","target","value","onClick","stopPropagation","console","log","parseInt","isNaN","alert","replaceAll","addFieldToWarehouse","WarehouseView","props","editable","setEditable","addField","location","setWarehouseInfo","a","Object","keys","Filter","applyFilter","clearSearch","showFilters","setShowFilters","setCity","setCluster","from","setFrom","setTo","placeholder","onKeyUp","Header","onSearch","search","setSearch","App","setWarehouses","getWarehouses","fetch","headers","res","json","warehouseName","clearTimeout","setTimeout","data","filter","toLowerCase","includes","rangeFrom","rangeTo","useEffect","path","exact","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.919b4b79.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport \"../warehouse.css\"\r\n\r\nconst Warehouse = ({warehouse}) => {\r\n    return (\r\n        <Link className=\"warehouse-link\" to={{pathname: `/Warehouse/view/${warehouse.id}`,state:{warehouse:warehouse}}}>\r\n\r\n            <div className=\"warehouse\">\r\n            <h2>{warehouse.name}</h2>\r\n            <p>City: {warehouse.city}</p>  \r\n            <p>Space : {warehouse.space_available}</p>  \r\n            <p>Type: {warehouse.type}</p>  \r\n            <p>Cluster: {warehouse.cluster}</p>  \r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\nexport default Warehouse\r\n","import Warehouse from './Warehouse'\r\n\r\nimport \"../warehouse.css\"\r\n\r\nconst Warehouses = ({warehouses}) => {\r\n    return (\r\n        <div className=\"warehouse-container\">\r\n            \r\n            {\r\n                warehouses.length>0 ?\r\n                \r\n                (warehouses.map((warehouse)=>{\r\n                    \r\n                    return (\r\n                        \r\n                            <Warehouse key={warehouse.id} warehouse={warehouse} />\r\n\r\n                \r\n                    )\r\n                })) : <p style={{padding: \"20px\", color:\"red\"}}>Oops! No warehouses found</p>\r\n            }\r\n                \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Warehouses\r\n","import { useState } from 'react'\r\n\r\nconst WarehouseView = (props) => {\r\n    const [editable,setEditable] = useState(false)\r\n    const [addField,setAddField] = useState(false)\r\n    const [warehouse,setWarehouse] = useState(props.location.state.warehouse)\r\n\r\n    const setWarehouseInfo = async() =>{\r\n        console.log(warehouse);\r\n        setEditable(!editable)\r\n        /**  \r\n         * Need to host api using express to send POST request\r\n        \r\n\r\n            await fetch(`../warehouses.json`,{\r\n                method:'PUT',\r\n                headers:{\r\n                    \"Content-type\": \"application/json; charset=UTF-8\"\r\n                },\r\n                body: JSON.stringify(warehouse)\r\n            }).catch((e)=>console.log(e))\r\n        */\r\n    }\r\n\r\n    \r\n    console.log(props.location.state)\r\n    return (\r\n            \r\n            <div className=\"warehouse-expand\">\r\n                        \r\n                <div className=\"warehouse-expand-card\">\r\n                    {/* {console.log(warehouse)} */}\r\n                    <h2 className=\"warehouse-view-header\">{warehouse.name}</h2>\r\n                    \r\n                        \r\n                        {    \r\n                            Object.keys(warehouse).map((key)=>{\r\n                                \r\n                                return(\r\n                                    <div key={key} className={!editable?\"table\":\"\"}>\r\n                                        <p >{key}:</p> <p> {!editable?\"\"+warehouse[key]:<input type=\"text\" className=\"edit-field\" value={warehouse[key]} onChange={(e)=>setWarehouse({...warehouse,[key]:e.target.value})}/>}</p>          \r\n                                    </div>\r\n                                )\r\n                            })  \r\n                        }\r\n                    \r\n                    \r\n                        {\r\n                                addField ?\r\n                                <CustomFieldContainer warehouse={warehouse} setWarehouse={setWarehouse} setAddField={setAddField}/>\r\n                            :\r\n                            \"\"\r\n                        }\r\n                        {\r\n                            editable ?\r\n                            \r\n                            <div>\r\n                                <button className=\"submit\" onClick={setWarehouseInfo}>Set</button>\r\n                                <button className=\"edit\" onClick={()=>setAddField(!addField)}>{!addField? \"Add Field\" : \"Cancel\"}</button>\r\n                            </div>\r\n                            :\r\n                            <button className=\"edit\" onClick={()=>setEditable(!editable)}>Edit</button>\r\n                            \r\n                        }\r\n                    {/* {\r\n                        editable && addField ?\r\n                        <button className=\"submit\" onClick={setWarehouseInfo}>Set</button>:\r\n                        <button className=\"edit\" onClick={()=>setEditable(!editable)}>Edit</button>\r\n                    } */}\r\n                </div>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nconst CustomFieldContainer = ({warehouse,setWarehouse,setAddField}) =>{\r\n    \r\n    const [customField,setCustomField] = useState({})\r\n\r\n    const addFieldToWarehouse = ({key,type,value}) =>{\r\n        console.log(type);\r\n        if(type === \"boolean\")\r\n           value = (value === \"true\")\r\n        else if(type === \"number\")\r\n        {\r\n            value = parseInt(value)\r\n            if(isNaN(value))\r\n            {\r\n                alert(\"Please enter valid number\")\r\n                return\r\n            }\r\n        }\r\n        \r\n        console.log(key,value);\r\n        if(key)\r\n        {\r\n            key = key.replaceAll(\" \",\"_\")\r\n            setWarehouse({...warehouse,[key]:value?value:\"null\"})\r\n        }\r\n        else\r\n            alert(\"Please enter values\")\r\n            \r\n        \r\n    }\r\n    return(\r\n        \r\n        <div className=\"customFieldContainer\">\r\n            <div>\r\n                <p> Key name:</p>\r\n                <input type=\"text\" name=\"customKey\" id=\"customKey\" onChange={(e)=>setCustomField({...customField,key:e.target.value})}/>\r\n            </div>\r\n            <div>\r\n                <p> Key type:</p>\r\n                <select name=\"customType\" id=\"customType\"  onChange={(e)=>setCustomField({...customField,type:e.target.value})}>\r\n                    <option value=\"string\" >String</option>\r\n                    <option value=\"number\">Number</option>\r\n                    <option value=\"boolean\">Boolean</option>\r\n                </select>\r\n            </div>\r\n            {/* <input type=\"text\" name=\"customType\" id=\"\" onChange={(e)=>setCustomField({...customField,type:e.target.value})}/> */}\r\n            <div>\r\n                <p> Value:</p>\r\n                <input type=\"text\" name=\"customValue\" id=\"customValue\" onChange={(e)=>setCustomField({...customField,value:e.target.value})}/>\r\n            </div>\r\n            <button onClick={(e)=>{\r\n                e.stopPropagation()\r\n                addFieldToWarehouse(customField)   \r\n                setAddField(false)\r\n                \r\n            }}>Add</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WarehouseView\r\n","import {useState} from 'react'\r\nconst Filter = ({applyFilter,clearSearch}) => {\r\n    const [showFilters, setShowFilters] = useState(false)\r\n    const [city,setCity] = useState(\"\")\r\n    const [cluster,setCluster] = useState(\"\")\r\n    const [from,setFrom] = useState()\r\n    const [to,setTo] = useState()\r\n    return (\r\n        <>\r\n            <button onClick={()=>{\r\n                clearSearch()\r\n                setShowFilters(!showFilters)\r\n            }}>Filter</button>\r\n            {\r\n                showFilters &&\r\n                <div>\r\n                    <span>City:</span><input type=\"text\" name=\"city\" id=\"city\" placeholder=\"\" onKeyUp={e=>setCity(e.target.value)}/>\r\n                    <span>Cluster:</span><input type=\"text\" name=\"cluster\" id=\"cluster\" placeholder=\"\" onKeyUp={e=>setCluster(e.target.value)}/>\r\n                    <span>From:</span> <input type=\"number\" name=\"from\" id=\"from\" onKeyUp={e=>setFrom(e.target.value)} />\r\n                    <span>To:</span> <input type=\"number\" name=\"to\" id=\"to\" onKeyUp={e=>setTo(e.target.value)}/>\r\n                    <button onClick={()=>{\r\n                        console.log(city)\r\n                        // if(to ? from <= to : true)\r\n                            applyFilter(city,cluster,from,to)   \r\n                        // else\r\n                        //     alert(\"Please fill proper from and to values\")\r\n                    }}>Apply</button>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import Filter from './Filter'\r\nimport { useState } from 'react'\r\nimport '../header.css'\r\n\r\nconst Header = ({onSearch, applyFilter}) => {\r\n\r\n    const [search,setSearch] = useState(\"\")\r\n\r\n    const searchWarehouse = (value) => {\r\n        console.log(value);\r\n        setSearch(value)\r\n        onSearch(value)\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <input type=\"text\" name=\"warehouseName\" id=\"warehouseName\" value={search} placeholder=\"Search warehouse name\" onChange={(e)=>{\r\n                setSearch(e.target.value)\r\n                console.log(search);\r\n                searchWarehouse(e.target.value)\r\n            }}/>\r\n            <Filter applyFilter={applyFilter} clearSearch={()=>setSearch(\"\")}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {useState,useEffect} from 'react'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport Warehouses from './Components/Warehouses'\r\nimport WarehouseView from './Components/WarehouseView'\r\nimport Header from './Components/Header'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n  const [warehouses,setWarehouses] = useState([])\r\n  \r\n  const getWarehouses = async () =>{\r\n    const res = await fetch('/Warehouse/warehouses.json',\r\n    {\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n       }\r\n    })\r\n    \r\n    return await res.json()\r\n  }\r\n\r\n  const onSearch = () => {\r\n    let id\r\n    return async function debounced(warehouseName) {\r\n      clearTimeout(id)\r\n      id = setTimeout(async()=>{\r\n        \r\n          // console.log(\"called\" + warehouseName);\r\n          const data = await getWarehouses()\r\n          if(warehouseName)\r\n          {\r\n            setWarehouses(data.filter(warehouse => warehouse.name.toLowerCase().includes(warehouseName.toLowerCase())))\r\n          }\r\n          else\r\n          {\r\n            \r\n            setWarehouses(data)\r\n          }\r\n        \r\n      },300)\r\n    }\r\n  }\r\n  \r\n  const applyFilter = async (city,cluster,rangeFrom, rangeTo) => {\r\n    const data = await getWarehouses()\r\n      \r\n    setWarehouses(data.filter(warehouse => \r\n      (city ? warehouse.city.toLowerCase().includes(city.toLowerCase()) : true) &&\r\n      (cluster ? warehouse.cluster.toLowerCase().includes(cluster.toLowerCase()) : true) &&\r\n      // (\r\n        // (!rangeTo ? warehouse.space_available >= rangeFrom : false) ||\r\n        (rangeFrom && rangeTo ? warehouse.space_available >= rangeFrom && warehouse.space_available <= rangeTo: true) &&\r\n        (rangeFrom ? warehouse.space_available >= rangeFrom : true) &&\r\n        (rangeTo ? warehouse.space_available <= rangeTo : true) \r\n        \r\n      // )\r\n      ))\r\n          \r\n  }\r\n\r\n  useEffect(()=>{\r\n    return async function(){\r\n\r\n      const data = await getWarehouses()\r\n      // console.log(\"data:\" +data);\r\n      setWarehouses(data)\r\n    }()\r\n    \r\n  },[])\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Route path='/Warehouse' exact render={(props)=>(\r\n          <>\r\n            <Header onSearch={onSearch()} applyFilter={applyFilter}/>\r\n            <Warehouses warehouses={warehouses} />\r\n          </>\r\n        )}/>\r\n        \r\n        <Route path=\"/Warehouse/view\" component={WarehouseView} />\r\n        \r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}