{"version":3,"sources":["Components/Warehouse.js","Components/Warehouses.js","Components/WarehouseView.js","Components/Filter.js","Components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Warehouse","warehouse","to","pathname","id","className","name","city","space_available","type","cluster","Warehouses","warehouses","length","map","style","padding","color","WarehouseView","props","useState","editable","setEditable","location","setWarehouse","setWarehouseInfo","a","console","log","Object","keys","key","value","onChange","e","target","onClick","Filter","applyFilter","showFilters","setShowFilters","setCity","setCluster","from","setFrom","setTo","placeholder","onKeyUp","alert","Header","onSearch","App","setWarehouses","getWarehouses","fetch","headers","res","json","warehouseName","clearTimeout","setTimeout","data","filter","toLowerCase","includes","rangeFrom","rangeTo","useEffect","path","exact","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a7fdca6.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport \"../warehouse.css\"\r\n\r\nconst Warehouse = ({warehouse}) => {\r\n    return (\r\n        <Link to={{pathname: `warehouse/${warehouse.id}`, warehouse: warehouse}}>\r\n\r\n            <div className=\"warehouse\">\r\n            <h2>{warehouse.name}</h2>\r\n            <p>City: {warehouse.city}</p>  \r\n            <p>Space : {warehouse.space_available}</p>  \r\n            <p>Type: {warehouse.type}</p>  \r\n            <p>Cluster: {warehouse.cluster}</p>  \r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\n\r\nexport default Warehouse\r\n","import Warehouse from './Warehouse'\r\n\r\nimport \"../warehouse.css\"\r\n\r\nconst Warehouses = ({warehouses}) => {\r\n    return (\r\n        <div className=\"warehouse-container\">\r\n            \r\n                {\r\n                    warehouses.length>0 ?\r\n                    warehouses.map((warehouse)=>{\r\n                        \r\n                        return (\r\n                            \r\n                                <Warehouse key={warehouse.id} warehouse={warehouse} />\r\n\r\n                    \r\n                        )\r\n                    }) : <p style={{padding: \"20px\", color:\"red\"}}>Oops! No warehouses found</p>\r\n                }\r\n                \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Warehouses\r\n","import { useState } from 'react'\r\n\r\nconst WarehouseView = (props) => {\r\n    const [editable,setEditable] = useState(false)\r\n    const [warehouse,setWarehouse] = useState(props.location.warehouse)\r\n    // const [city,setCity] = useState('')\r\n\r\n    const setWarehouseInfo = async() =>{\r\n        console.log(warehouse);\r\n        \r\n        /**  \r\n         * Need to host api using express to send POST request\r\n        */\r\n\r\n        // await fetch(`../warehouses.json`,{\r\n        //     method:'POST',\r\n        //     headers:{\r\n        //         \"Content-type\": \"application/json; charset=UTF-8\"\r\n        //     },\r\n        //     body: JSON.stringify(warehouse)\r\n        // }).catch((e)=>console.log(e))\r\n\r\n        \r\n    }\r\n    return (\r\n        \r\n            <div className=\"warehouse-expand\">\r\n                        \r\n                    <div className=\"warehouse-expand-card\">\r\n                        <h2>{warehouse.name}</h2>\r\n                        {\r\n                            Object.keys(warehouse).map((key)=>{\r\n                                \r\n                                return(\r\n                                    <p key={key}>{key}: {!editable?\"\"+warehouse[key]:<input type=\"text\" value={warehouse[key]} onChange={(e)=>setWarehouse({...warehouse,[key]:e.target.value})}/>}</p>          \r\n                                )\r\n                            })                        \r\n                        }\r\n                        {\r\n                            editable ?\r\n                            <button className=\"submit\" onClick={setWarehouseInfo}>Set</button>:\r\n                            <button className=\"edit\" onClick={()=>setEditable(!editable)}>Edit</button>\r\n\r\n                        }\r\n                    </div>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\n// const ShowWarehouse = ({warehouse, makeEditable}) => {\r\n//     console.log(warehouse)\r\n//     return(\r\n//         <div className=\"warehouse-expand-card\">\r\n//             <h2>{warehouse.name}</h2>\r\n//             <p>City: {warehouse.city}</p>  \r\n//             <p>Space: {warehouse.space_available}</p>  \r\n//             <p>Type: {warehouse.type}</p>  \r\n//             <p>Cluster: {warehouse.cluster}</p>  \r\n//             <button className=\"edit\" onClick={makeEditable}>Edit</button>\r\n//         </div>\r\n        \r\n//     )\r\n// }\r\n\r\n// const EditWarehouse = ({warehouse}) => {\r\n//     console.log(warehouse)\r\n//     return(\r\n//         <div className=\"warehouse-expand-card\">\r\n//             <h2>{warehouse.name}</h2>\r\n//             <form>\r\n//                 <span>City:</span> <input type=\"text\" name=\"city\" id=\"city\"/>\r\n//                 <span>Space:</span> <input type=\"text\" name=\"space\" id=\"space\"/>\r\n//                 <span>Type:</span> <input type=\"text\" name=\"type\" id=\"type\"/>\r\n//                 <span>Cluster:</span> <input type=\"text\" name=\"cluster\" id=\"cluster\"/>  \r\n//             </form>\r\n//         </div>\r\n        \r\n//     )\r\n// }\r\nexport default WarehouseView\r\n","import {useState} from 'react'\r\nconst Filter = ({applyFilter}) => {\r\n    const [showFilters, setShowFilters] = useState(false)\r\n    const [city,setCity] = useState(\"\")\r\n    const [cluster,setCluster] = useState(\"\")\r\n    const [from,setFrom] = useState()\r\n    const [to,setTo] = useState()\r\n    return (\r\n        <>\r\n            <button onClick={()=>setShowFilters(!showFilters)}>Filter</button>\r\n            {\r\n                showFilters &&\r\n                <div>\r\n                    <input type=\"text\" name=\"city\" id=\"city\" placeholder=\"City\" onKeyUp={e=>setCity(e.target.value)}/>\r\n                    <input type=\"text\" name=\"cluster\" id=\"cluster\" placeholder=\"Cluster\" onKeyUp={e=>setCluster(e.target.value)}/>\r\n                    <span>From:</span> <input type=\"number\" name=\"from\" id=\"from\" onKeyUp={e=>setFrom(e.target.value)} />\r\n                    <span>To:</span> <input type=\"number\" name=\"to\" id=\"to\" onKeyUp={e=>setTo(e.target.value)}/>\r\n                    <button onClick={()=>{\r\n                        console.log(city);\r\n                        if((from && to) || (!from && !to))\r\n                            applyFilter(city,cluster,from,to)   \r\n                        else\r\n                            alert(\"Please fill both range fields\")\r\n                    }}>Apply</button>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import Filter from './Filter'\r\nimport '../header.css'\r\n\r\nconst Header = ({onSearch, applyFilter}) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <input type=\"text\" name=\"warehouseName\" id=\"warehouseName\" placeholder=\"Search warehouse name\" onKeyUp={(e)=>onSearch(e.target.value)}/>            \r\n            <Filter applyFilter={applyFilter}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {useState,useEffect} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Warehouses from './Components/Warehouses'\nimport WarehouseView from './Components/WarehouseView'\nimport Header from './Components/Header'\nimport './app.css'\n\nfunction App() {\n\n  const [warehouses,setWarehouses] = useState([])\n  \n  const getWarehouses = async () =>{\n    const res = await fetch('warehouses.json',\n    {\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    })\n    \n    return await res.json()\n  }\n\n  const onSearch = () => {\n    let id\n    return async function debounced( warehouseName) {\n      clearTimeout(id)\n      id = setTimeout(async()=>{\n        \n          // console.log(\"called\" + warehouseName);\n          const data = await getWarehouses()\n          if(warehouseName)\n          {\n            setWarehouses(data.filter(warehouse => warehouse.name.toLowerCase().includes(warehouseName.toLowerCase())))\n          }\n          else\n          {\n            \n            setWarehouses(data)\n          }\n        \n      },300)\n    }\n  }\n  \n  const applyFilter = async (city,cluster,rangeFrom, rangeTo) => {\n    const data = await getWarehouses()\n      \n    setWarehouses(data.filter(warehouse => \n      (city ? warehouse.city.toLowerCase().includes(city.toLowerCase()) : true) &&\n      (cluster ? warehouse.cluster.toLowerCase().includes(cluster.toLowerCase()) : true) &&\n      (rangeFrom ? warehouse.space_available >= rangeFrom && warehouse.space_available <= rangeTo: true)\n      ))\n          \n  }\n\n  useEffect(()=>{\n    return async function(){\n\n      const data = await getWarehouses()\n      // console.log(\"data:\" +data);\n      setWarehouses(data)\n    }()\n    \n  },[])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route path='/' exact render={(props)=>(\n          <>\n            <Header onSearch={onSearch()} applyFilter={applyFilter}/>\n            <Warehouses warehouses={warehouses} />\n          </>\n        )}/>\n        \n        <Route path=\"/warehouse/\" component={WarehouseView} />\n        \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}